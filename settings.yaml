# Structure of the YAML is:
#
# Term: 
#     - TestType: argument(s)
#     - TestType: argument(s)
# 
# Below are the actual test settings for this dataset:
#
# http://dataset.inbo.be/dagvlinders-inbo-occurrences


# Other tests not covered here:
# 
# - list all terms that were not tested
# - list all terms that are empty for all records
# - list grouped unique values: scientificName, taxonRank, ...


occurrenceID:
    - populated: true
    - unique: true # Column based, covered by the IPT

type:
    - populated: true
    - if:
        - basisOfRecord:
            - populated: true # Necessary to avoid empty values
            - equals: HumanObservation
        - equals: Event
#        - populated: true # Not necessary, already covered by main populated test
    - if:
        - basisOfRecord:
            - populated: true
            - equals: PreservedSpecimen
        - equals: PhysicalObject
    - if:
        - basisOfRecord:
            - populated: true
            - equals: Occurrence
        - equals: Text

language:
    - populated: true
    - equals: en # Equals is case sensitive

license:
    - populated: true
    - equals: http://creativecommons.org/publicdomain/zero/1.0/
  
rightsHolder:
    - populated: true
    - equals: INBO # Example of an institution specific test

accessRights:
    - populated: true
    - equals: http://www.inbo.be/en/norms-for-data-use

datasetID:
    - populated: true
    - equals: http://doi.org/10.15468/njgbmh # Example of an dataset specific test

institutionCode:
    - populated: true
    - equals: INBO

datasetName:
    - populated: true
    - equals: "Vlinderdatabank - Butterflies in Flanders and the Brussels Capital Region, Belgium"

ownerInstitutionCode:
    - populated: true
    - equals: [INBO, INBO/LB-BIM]

basisOfRecord:
    - equals: [HumanObservation, PreservedSpecimen, Occurrence] # Can be removed because of next test
#    - mapping: # Not sure this is a good implementation
#        - with: type
#        - Event: HumanObservation
#        - PhysicalObject: PreservedSpecimen
#        - Text: Occurrence
    - populated: true

informationWithheld:
    - populated: true
    - equals: see metadata

dataGeneralizations:
    - if:
        - term: decimalLongitude
        - required: true
        - equals: "coordinates are generalized to centroid a 5x5km UTM grid"

# dynamicProperties: 
#    - type: json

recordedBy:
    - populated: true
    - delimitedValues:
        - delimiter: " | "
#        - regex: "observerID:*"
        - length: [, 20] # A simple test to check oddities. Alternative expressions: 10-20, >10
        - populated: true

individualCount:
    - type: integer
    - range: [1, 200] # Assumes integer or floats. This also covers to test not equal to 0.

sex:
    - delimitedValues:
        - delimiter: " | "
        - equals: [female, male]
        - listValues: true # Will list delimited values
    - listValues: false # Will list undelimited values
#    - mapping: # Strong mapping, e.g. if adult = empty, sex cannot be populated.
#        - with: lifeStage
#        - adult: [female, male]
#        - "": ""

lifeStage:
    - equals: [adult]

associatedReferences:
#    - type: url
    - listValues: true # Output the unique values for this term

# eventID
  
samplingProtocol:
    - populated: true
    - equals: [casual observation, fixed sampling location, monitoring, 
               recorded from collection, recorded from literature]

samplingEffort:
    - type: json
#    - mapping:
#        - with: samplingProtocol
#        - keyValues: [
#            ("fixed sampling location": populated),
#            ...
#            ]

eventDate:
    - dateValues:
        - equals: [YYYY-MM-DD, YYYY-MM, YYYY] # No ranges defined
        - range: [1830-01-01, 2014-10-20]

verbatimEventDate:
    - dateValues:
        - equals: [YYYY-MM-DD/YYYY-MM-DD, YYYY-MM/YYYY-MM, YYYY/YYYY] # Only accept ranges

# locationID

continent:
    - populated: true
    - equals: Europe

countryCode:
    - populated: true
    - equals: BE

stateProvince:
    - equals: [Antwerp, Brussels Capital Region, East Flanders, Flemish Brabant, Limburg, West Flanders]

municipality:
    - populated: true
    - listValues: true

# verbatimLocality

verbatimCoordinates:
    - format: 31U*
    - length: 8 # Or [8,8]
    - listValues: true

# verbatimLatitude:
#    - range: ...

# verbatimLongitude:
#    - range: ...

verbatimCoordinateSystem:
    - if:
        - term: verbatimCoordinates
        - populated: true
        - equals: UTM 5km # [Belgian Lambert 72, UTM 5km]

verbatimSRS:
    - if:
        - term: verbatimCoordinates
        - populated: true
        - equals: WGS84 # [Belgian Datum 1972, ED50, WGS84]

decimalLatitude:
    - type: float
    - numberFormat: .5f
    - range: [50.68, 51.51]

decimalLongitude:
    - if:
        - term: decimalLatitude
        - populated: true
    - type: float
    - numberFormat: .5f
    - range: [2.54, 5.92]

geodeticDatum:
    - if:
        - term: decimalLongitude
        - populated: true
        - equals: WGS84
  
coordinateUncertaintyInMeters:
    - if:
        - term: decimalLongitude
        - populated: true
        - equals: 3769 # Or use a range
  
georeferenceRemarks:
    - if:
        - term: decimalLongitude
        - equals: coordinates are centroid of used grid square

identifiedBy:
    - delimitedValues:
        - delimiter: " | "
        - listValues: true
#        - regex: [First Last, F. Last] # How to cope with First name Last name, F. Last name?

scientificName:
    - populated: true
#    - taxonValues:
#        - More complex lookups to check nomenclature and taxonomy
    - listValues: true # Allows user to check values

kingdom:
    - populated: true
    - equals: Animalia

phylum:
    - populated: true
    - equals: Arthropoda

class:
    - populated: true
    - equals: Insecta

order:
    - populated: true
    - equals: Lepidoptera

taxonRank:
    - populated: true
    - if:
        - term: scientificName
        - populated: true
        - equals: species # [species, subspecies, form]
    - listValues: true # Not sure how to verify this with scientificName
#    - mapping:
#        - with: scientificName

scientificNameAuthorship:
    - if:
        - term: scientificName
        - populated: true
    - listValues: true

vernacularName:
    - listValues: true

nomenclaturalCode:
    - if:
        - term: scientificName
        - populated: true
        - equals: ICZN # [ICZN, ICBN]
